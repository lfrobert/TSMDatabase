-- \w+.NEXTVAL,   Find any word with .NEXTVAL, as the last characters in the word

CREATE TABLE TSM_EQUIPMENT
(EQUIPMENT_ID NUMBER(6),
EQUIPMENT_NAME VARCHAR2(30) NOT NULL,
EQUIPMENT_DESCRIPTION VARCHAR2(100),

CONSTRAINT EQUIPMENT_EQUIPMENTNAME_PK PRIMARY KEY(EQUIPMENT_ID)
);


CREATE TABLE TSM_VEHICLE
(VEHICLE_ID NUMBER(6),
VEHICLE_TYPE VARCHAR2(5) NOT NULL,
VEHICLE_MAKE VARCHAR2(10) NOT NULL,
VEHICLE_MODEL VARCHAR2(10) NOT NULL,
VEHICLE_YEAR NUMBER(4) NOT NULL,
COLOR VARCHAR2(10) NOT NULL,
OPERATIONAL_YN VARCHAR2(3) NOT NULL,


CONSTRAINT VEHICLE_VEHICLEID_TYPE_PK PRIMARY KEY(VEHICLE_ID, VEHICLE_TYPE),
CONSTRAINT VEHICLE_VEHICLEYEAR_CK CHECK(VEHICLE_YEAR >= 1900),
CONSTRAINT VEHICLE_OPERATIONALYN_CK CHECK(OPERATIONAL_YN IN('YES','NO')),
CONSTRAINT VEHICLE_VEHICLETYPE_CK CHECK(VEHICLE_TYPE IN('TRUCK','CAR'))
);


CREATE TABLE TSM_CAR
(VEHICLE_ID NUMBER(6),
VEHICLE_TYPE VARCHAR2(5),	
CAR_PURPOSE VARCHAR2(40) NOT NULL,

CONSTRAINT CAR_VEHICLEID_TYPE_PK PRIMARY KEY(VEHICLE_ID, VEHICLE_TYPE),
CONSTRAINT CAR_VEHICLEID_TYPE_FK FOREIGN KEY(VEHICLE_ID, VEHICLE_TYPE) REFERENCES TSM_VEHICLE(VEHICLE_ID, VEHICLE_TYPE),
CONSTRAINT CAR_VEHICLETYPE_CK CHECK(VEHICLE_TYPE = 'CAR')
);

CREATE TABLE TSM_TRUCK
(VEHICLE_ID NUMBER(6),
VEHICLE_TYPE VARCHAR2(5) NOT NULL,
TRUCK_LENGTH_FT NUMBER(3,1) NOT NULL,
TRUCK_HEIGHT_FT NUMBER(3,1) NOT NULL,

CONSTRAINT TRUCK_VEHICLEID_TYPE_PK PRIMARY KEY(VEHICLE_ID, VEHICLE_TYPE),
CONSTRAINT TRUCK_VEHICLEID_TYPE_FK FOREIGN KEY(VEHICLE_ID, VEHICLE_TYPE) REFERENCES TSM_VEHICLE(VEHICLE_ID, VEHICLE_TYPE),
CONSTRAINT TRUCK_VEHICLETYPE_CK CHECK(VEHICLE_TYPE = 'TRUCK'),

CONSTRAINT TRUCK_TRUCKLENGTH_CK CHECK(TRUCK_LENGTH_FT >= 8),
CONSTRAINT TRUCK_TRUCKHEIGHT_CK CHECK(TRUCK_HEIGHT_FT >= 8)
);

---------------------------------------------------------

CREATE TABLE TSM_EMPLOYEE
(EMPLOYEE_ID NUMBER(6),
FIRST_NAME VARCHAR2(20) NOT NULL,
MIDDLE_INITAL CHAR(1),
LAST_NAME VARCHAR2(30) NOT NULL,
STREET VARCHAR2(40) NOT NULL,
CITY VARCHAR2(20) NOT NULL,
STATE CHAR(2) NOT NULL,
ZIP_CODE CHAR(5) NOT NULL,
DOB DATE NOT NULL,
CELL_PHONE CHAR(13) NOT NULL,
EMAIL VARCHAR2(40) NOT NULL,
GENDER VARCHAR2(6) NOT NULL,
MOVER_YN VARCHAR2(3),
OFFICE_WORKER_YN VARCHAR2(3),

CONSTRAINT EMPLOYEE_EMPLOYEEID_PK PRIMARY KEY(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN),

CONSTRAINT EMPLOYEE_DOB_CK CHECK(DOB >= '01-JAN-1900'),
CONSTRAINT EMPLOYEE_GENDER_CK CHECK(GENDER IN('MALE', 'FEMALE', 'OTHER')),
CONSTRAINT EMPLOYEE_MOVERYN_CK CHECK(MOVER_YN IN('YES', 'NO')),
CONSTRAINT EMPLOYEE_OFFICEWORKERYN_CK CHECK(OFFICE_WORKER_YN IN('YES', 'NO'))
);


CREATE TABLE TSM_MOVER
(EMPLOYEE_ID NUMBER(6),
DRIVER_YN VARCHAR2(3) NOT NULL,
PACKING_SKILLS_YN VARCHAR2(3) NOT NULL,
HOURLY_WAGE NUMBER(4,2),
MOVER_YN VARCHAR2(3),
OFFICE_WORKER_YN VARCHAR2(3),

CONSTRAINT MOVER_EMPLOYEEID_PK PRIMARY KEY(EMPLOYEE_ID,  MOVER_YN, OFFICE_WORKER_YN),
CONSTRAINT MOVER_EMPLOYEEID_FK FOREIGN KEY(EMPLOYEE_ID,  MOVER_YN, OFFICE_WORKER_YN) REFERENCES TSM_EMPLOYEE(EMPLOYEE_ID,  MOVER_YN, OFFICE_WORKER_YN),
CONSTRAINT MOVER_OVERLAP_CK CHECK(MOVER_YN = 'YES'),

CONSTRAINT MOVER_DRIVER_CK CHECK(DRIVER_YN IN( 'YES', 'NO')),
CONSTRAINT MOVER_PACKINGSKILLS_CK CHECK(PACKING_SKILLS_YN IN( 'YES', 'NO')),
CONSTRAINT MOVER_HOURLYWAGE_CK CHECK(HOURLY_WAGE >= 10)
);


CREATE TABLE TSM_OFFICE_WORKER
(EMPLOYEE_ID NUMBER(6),
OFFICE_POSITION VARCHAR2(30) NOT NULL,
YEARLY_SALARY NUMBER(6),
MOVER_YN VARCHAR2(3),
OFFICE_WORKER_YN VARCHAR2(3),

CONSTRAINT OFFICEWORKER_EMPLOYEEID_PK PRIMARY KEY(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN),
CONSTRAINT OFFICEWORKER_EMPLOYEEID_FK FOREIGN KEY(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN) REFERENCES TSM_EMPLOYEE(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN),
CONSTRAINT OFFICEWORKER_OVERLAP_CK CHECK(OFFICE_WORKER_YN = 'YES'),

CONSTRAINT OFFICEWORKER_YEARLYSALARY_CK CHECK(YEARLY_SALARY BETWEEN 20000 AND 150000)
);


CREATE TABLE TSM_HOURLY_PAYROLL
(PAYROLL_ID NUMBER(6),
EMPLOYEE_ID NUMBER(6) NOT NULL,	
WORK_WEEK_START DATE NOT NULL,
WORK_WEEK_END DATE NOT NULL,
PAY_DATE DATE NOT NULL,
HOURS_WORKED NUMBER(3) NOT NULL,
MOVER_YN VARCHAR2(3),
OFFICE_WORKER_YN VARCHAR2(3),

CONSTRAINT HOURLYPAYROLL_PAYROLLID_PK PRIMARY KEY(PAYROLL_ID),
CONSTRAINT HOURLYPAYROLL_EMPLOYEEID_FK FOREIGN KEY(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN) REFERENCES TSM_MOVER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN),

CONSTRAINT HOURLYPAYROLL_WORKWEEK_CK CHECK(WORK_WEEK_START < WORK_WEEK_END),
CONSTRAINT HOURLYPAYROLL_PAYDATE_CK CHECK(WORK_WEEK_END < PAY_DATE),
CONSTRAINT HOURLYPAYROLL_HOURSWORKED_CK CHECK(HOURS_WORKED > 0)
);



----------------------------------------------------------------------------------------------------


CREATE TABLE TSM_CUSTOMER
(CUSTOMER_ID NUMBER(6),
CUSTOMER_TYPE VARCHAR2(8),
FIRST_NAME VARCHAR2(20) NOT NULL,
MIDDLE_INITAL CHAR(1) NOT NULL,
LAST_NAME VARCHAR2(30) NOT NULL,
DOB DATE NOT NULL,
CELL_PHONE CHAR(13),
HOME_PHONE CHAR(13),
EMAIL VARCHAR2(40),
GENDER VARCHAR2(6) NOT NULL,
RESPONSABLE_FOR_PAYMENT_YN VARCHAR2(3) NOT NULL,
COMMENTS VARCHAR2(80),


CONSTRAINT CUST_CUSTOMERID_TYPE_PK PRIMARY KEY(CUSTOMER_ID, CUSTOMER_TYPE),
CONSTRAINT CUST_DOB_CK CHECK(DOB >= '01-JAN-1900'),
CONSTRAINT CUST_GENDER_CK CHECK(GENDER IN('MALE', 'FEMALE', 'OTHER')),
CONSTRAINT CUST_RESPONSABLE4PAYMENT_CK CHECK(RESPONSABLE_FOR_PAYMENT_YN IN('YES', 'NO')),
CONSTRAINT CUST_CUSTOMERTYPE_CK CHECK(CUSTOMER_TYPE IN('RESIDENT', 'GUARDIAN'))
);



CREATE TABLE TSM_RESIDENT
(CUSTOMER_ID NUMBER(6),
CUSTOMER_TYPE VARCHAR2(8),	
ABLE_TO_CONSENT_YN VARCHAR2(3) NOT NULL,
STREET VARCHAR2(20) NOT NULL,
CITY VARCHAR2(20) NOT NULL,
STATE CHAR(2) NOT NULL,
ZIP_CODE CHAR(5) NOT NULL,
ROOM_NUMBER VARCHAR2(4),

CONSTRAINT RES_CUSTOMERID_TYPE_PK PRIMARY KEY(CUSTOMER_ID, CUSTOMER_TYPE),
CONSTRAINT RES_CUSTOMERID_TYPE_FK FOREIGN KEY(CUSTOMER_ID, CUSTOMER_TYPE) REFERENCES TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE),
CONSTRAINT RES_CUSTOMERTYPE_CK CHECK(CUSTOMER_TYPE IN('RESIDENT')),

CONSTRAINT RES_ABLE2CONSENT_CK CHECK(ABLE_TO_CONSENT_YN IN('YES', 'NO'))
);



CREATE TABLE TSM_GUARDIAN
(CUSTOMER_ID NUMBER(6),
CUSTOMER_TYPE VARCHAR2(8),
RELATION_TO_RESIDENT VARCHAR2(20) NOT NULL,	

CONSTRAINT GAURD_CUSTOMERID_TYPE_PK PRIMARY KEY(CUSTOMER_ID, CUSTOMER_TYPE),
CONSTRAINT GAURD_CUSTOMERID_TYPE_FK FOREIGN KEY(CUSTOMER_ID, CUSTOMER_TYPE) REFERENCES TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE),
CONSTRAINT GAURD_CUSTOMERTYPE_CK CHECK(CUSTOMER_TYPE = 'GUARDIAN')
);




---------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE TSM_EXECUTIVE_DIRECTOR
(EXECUTIVE_ID NUMBER(6),
FIRST_NAME VARCHAR2(20) NOT NULL,
LAST_NAME VARCHAR2(30) NOT NULL,
PHONE_NUMBER CHAR(13) NOT NULL,
EMAIL VARCHAR2(40) NOT NULL,	

CONSTRAINT EXECDIRECTOR_EXECUTIVEID_PK PRIMARY KEY (EXECUTIVE_ID)
);



CREATE TABLE TSM_SENIOR_COMMUNITY
(COMMUNITY_ID NUMBER(6),
EXECUTIVE_ID NUMBER(6) NOT NULL,	
COMMUNITY_NAME VARCHAR2(50) NOT NULL,
STREET VARCHAR2(40) NOT NULL,
CITY VARCHAR2(20) NOT NULL,
STATE CHAR(2) NOT NULL,
ZIP_CODE CHAR(5) NOT NULL,
NUM_OF_FLOORS NUMBER(2) NOT NULL,
ASSISTED_OR_MEMORY_YN VARCHAR2(3) NOT NULL,

CONSTRAINT SENIOR_COMMUNITYID_PK PRIMARY KEY(COMMUNITY_ID),
CONSTRAINT SENIOR_EXECUTIVEID_FK FOREIGN KEY(EXECUTIVE_ID) REFERENCES TSM_EXECUTIVE_DIRECTOR(EXECUTIVE_ID),
CONSTRAINT SENIOR_ASSISTEDMEM_CK CHECK(ASSISTED_OR_MEMORY_YN IN('YES', 'NO'))
);




CREATE TABLE TSM_JOB_ORDER
(JOB_ID NUMBER(6),
COMMUNITY_ID NUMBER(6) NOT NULL,
START_DATE DATE NOT NULL,
FINISH_DATE DATE NOT NULL,
SALVATION_ARMY_DROPOFF_YN VARCHAR2(3) NOT NULL,
EXPECTED_MILES_TO_DRIVE NUMBER(4) NOT NULL,
ORDER_STATUS VARCHAR2(15) NOT NULL,
JOB_COST NUMBER(8,2) NOT NULL,
BILL_AMT_PAID NUMBER(8,2),
COMMENTS VARCHAR2(50),	

CONSTRAINT JO_JOBID_PK PRIMARY KEY(JOB_ID),
CONSTRAINT JO_COMMUNITYID_FK FOREIGN KEY(COMMUNITY_ID) REFERENCES TSM_SENIOR_COMMUNITY(COMMUNITY_ID),
CONSTRAINT JO_STARTFINISHDATE_CK CHECK(START_DATE <= FINISH_DATE),
CONSTRAINT JO_EXPECTEDMILES_CK CHECK(EXPECTED_MILES_TO_DRIVE > 0),
CONSTRAINT JO_ORDERSTSTUS_CK CHECK(ORDER_STATUS IN('NOT STARTED', 'STARTED', 'COMPLETED', 'CANCELLED')),
CONSTRAINT JO_JOBCOSTVSBILL_CK CHECK(JOB_COST >= BILL_AMT_PAID)
);





---------------------------------------------------------------------------------------------------------------------------
--JUNCTION TABLES


CREATE TABLE TSM_EQUIPMENT_VEHICLE
(EQUIPMENT_ID NUMBER(6),	
VEHICLE_ID NUMBER(6),
VEHICLE_TYPE VARCHAR2(5),
EQUIPMENT_QUANTITY NUMBER(3) NOT NULL,	

CONSTRAINT EQUIPMENTID_VEHICLEID_PK PRIMARY KEY(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE),
CONSTRAINT EQUIP_VEH_EQUIPMENTID_FK FOREIGN KEY(EQUIPMENT_ID) REFERENCES TSM_EQUIPMENT(EQUIPMENT_ID),
CONSTRAINT EQUIP_VEH_VEHICLEID_FK FOREIGN KEY(VEHICLE_ID, VEHICLE_TYPE) REFERENCES TSM_VEHICLE(VEHICLE_ID, VEHICLE_TYPE),

CONSTRAINT EQUIPMENTQUANTITY_CK CHECK(EQUIPMENT_QUANTITY >= 1)
);



CREATE TABLE TSM_RESIDENT_GUARDIAN
(RESIDENT_ID NUMBER(6),
CUSTOMER_TYPE_R VARCHAR2(8),	
GUARDIAN_ID NUMBER(6),	
CUSTOMER_TYPE_G VARCHAR2(8),

CONSTRAINT RESIDENTID_VEHICLEID_PK PRIMARY KEY(RESIDENT_ID, CUSTOMER_TYPE_R, GUARDIAN_ID, CUSTOMER_TYPE_G),
CONSTRAINT RES_GAURD_RESIDENTID_FK FOREIGN KEY(RESIDENT_ID, CUSTOMER_TYPE_R) REFERENCES TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE),
CONSTRAINT RES_GAURD_GUARDIANID_FK FOREIGN KEY(GUARDIAN_ID, CUSTOMER_TYPE_G) REFERENCES TSM_GUARDIAN(CUSTOMER_ID, CUSTOMER_TYPE)
);



CREATE TABLE TSM_VEHICLE_JOB_ORDER
(VEHICLE_ID NUMBER(6),
VEHICLE_TYPE VARCHAR2(5),	
JOB_ID NUMBER(6),
MILES_DRIVEN NUMBER(5) NOT NULL,

CONSTRAINT VEHJO_VEHICLEID_JOBID_PK PRIMARY KEY(VEHICLE_ID, VEHICLE_TYPE, JOB_ID),
CONSTRAINT VEHJO_VEHICLEID_FK FOREIGN KEY(VEHICLE_ID, VEHICLE_TYPE) REFERENCES TSM_VEHICLE(VEHICLE_ID, VEHICLE_TYPE),
CONSTRAINT VEHJO_JOBID_FK FOREIGN KEY(JOB_ID) REFERENCES TSM_JOB_ORDER(JOB_ID)
);



CREATE TABLE TSM_EMPLOYEE_JOB_ORDER
(EMPLOYEE_ID NUMBER(6),	
MOVER_YN VARCHAR2(3),
OFFICE_WORKER_YN VARCHAR2(3),
JOB_ID NUMBER(6),

CONSTRAINT EMPJO_EMPLOYEEID_JOBID_PK PRIMARY KEY(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID),
CONSTRAINT EMPJO_EMPLOYEEID_FK FOREIGN KEY(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN) REFERENCES TSM_EMPLOYEE(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN),
CONSTRAINT EMPJO_JOBID_FK FOREIGN KEY(JOB_ID) REFERENCES TSM_JOB_ORDER(JOB_ID)
);



CREATE TABLE TSM_CUSTOMER_JOB_ORDER
(CUSTOMER_ID NUMBER(6),
CUSTOMER_TYPE VARCHAR2(8),	
JOB_ID NUMBER(6),

CONSTRAINT CUSTJO_CUSTOMERID_JOBID_PK PRIMARY KEY(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID),
CONSTRAINT CUSTJO_CUSTOMERID_FK FOREIGN KEY(CUSTOMER_ID, CUSTOMER_TYPE) REFERENCES TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE),
CONSTRAINT CUSTJO_JOBID_FK FOREIGN KEY(JOB_ID) REFERENCES TSM_JOB_ORDER(JOB_ID)
);









----Create Sequences for Auto Incrementing the Primary Key in Oracle





CREATE SEQUENCE TSM_EQUIPMENT_EQUIPMENTID_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE TSM_VEHICLE_VEHICLEID_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE
NOCYCLE;

------------------------------------------------------

CREATE SEQUENCE TSM_EMPLOYEE_EMPLOYEEID_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE TSM_HOURLYPAY_PAYROLLID_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE
NOCYCLE;

----------------------------------------------------------

CREATE SEQUENCE TSM_CUSTOMER_CUSTOMERID_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE
NOCYCLE;

----------------------------------------------------------

CREATE SEQUENCE TSM_EXECUTIVE_EXECUTIVEID_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE TSM_COMMUNITY_COMMUNITYID_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE TSM_JOBORDER_JOBID_SEQ
INCREMENT BY 1
START WITH 1
NOCACHE
NOCYCLE;

---------------------------------------------------















--TSM_EQUIPMENT
INSERT INTO TSM_EQUIPMENT(EQUIPMENT_ID, EQUIPMENT_NAME, EQUIPMENT_DESCRIPTION)
VALUES(TSM_EQUIPMENT_EQUIPMENTID_SEQ.NEXTVAL, 'LONG CART', 'USED TO PUSH LARGE PIECES OF FURNATURE');

INSERT INTO TSM_EQUIPMENT(EQUIPMENT_ID, EQUIPMENT_NAME, EQUIPMENT_DESCRIPTION)
VALUES(TSM_EQUIPMENT_EQUIPMENTID_SEQ.NEXTVAL, 'MEDIUM CART', 'USED TO PUSH MEDIUM PIECES OF FURNATURE');

INSERT INTO TSM_EQUIPMENT(EQUIPMENT_ID, EQUIPMENT_NAME, EQUIPMENT_DESCRIPTION)
VALUES(TSM_EQUIPMENT_EQUIPMENTID_SEQ.NEXTVAL, 'SMALL CART', 'USED TO PUSH SMALL PIECES OF FURNATURE');

INSERT INTO TSM_EQUIPMENT(EQUIPMENT_ID, EQUIPMENT_NAME, EQUIPMENT_DESCRIPTION)
VALUES(TSM_EQUIPMENT_EQUIPMENTID_SEQ.NEXTVAL, 'DOLLY', 'USED TO TRANSPORT LONG AND DELICATE PIECES OF FURNATURE');

INSERT INTO TSM_EQUIPMENT(EQUIPMENT_ID, EQUIPMENT_NAME, EQUIPMENT_DESCRIPTION)
VALUES(TSM_EQUIPMENT_EQUIPMENTID_SEQ.NEXTVAL, 'MOVING STRAPS', 'USED TO MAKE CARRYING HEAVY DRESSERS EASIER');

INSERT INTO TSM_EQUIPMENT(EQUIPMENT_ID, EQUIPMENT_NAME, EQUIPMENT_DESCRIPTION)
VALUES(TSM_EQUIPMENT_EQUIPMENTID_SEQ.NEXTVAL, 'BUNGEE CORD', 'USED TO SECURE FURNATURE IN THE TRUCK');

INSERT INTO TSM_EQUIPMENT(EQUIPMENT_ID, EQUIPMENT_NAME, EQUIPMENT_DESCRIPTION)
VALUES(TSM_EQUIPMENT_EQUIPMENTID_SEQ.NEXTVAL, 'MOVING BLANKET', 'USED TO PROTECT FURNITURE FROM DAMAGE IN TRUCK');

INSERT INTO TSM_EQUIPMENT(EQUIPMENT_ID, EQUIPMENT_NAME, EQUIPMENT_DESCRIPTION)
VALUES(TSM_EQUIPMENT_EQUIPMENTID_SEQ.NEXTVAL, 'SHRINK WRAP', 'USED TO PROTECT FURNITURE FROM DAMAGE');

INSERT INTO TSM_EQUIPMENT(EQUIPMENT_ID, EQUIPMENT_NAME, EQUIPMENT_DESCRIPTION)
VALUES(TSM_EQUIPMENT_EQUIPMENTID_SEQ.NEXTVAL, 'BOXES', 'USED TO PACK AND PROTECT ITEMS');

INSERT INTO TSM_EQUIPMENT(EQUIPMENT_ID, EQUIPMENT_NAME, EQUIPMENT_DESCRIPTION)
VALUES(TSM_EQUIPMENT_EQUIPMENTID_SEQ.NEXTVAL, 'MOVING PAPER', 'USED TO PROTECT ITEMS IN BOXES');



--TSM_VEHICLE
INSERT INTO TSM_VEHICLE(VEHICLE_ID, VEHICLE_TYPE, VEHICLE_MAKE, VEHICLE_MODEL, VEHICLE_YEAR, COLOR, OPERATIONAL_YN)
VALUES(TSM_VEHICLE_VEHICLEID_SEQ.NEXTVAL,'TRUCK','GMC', 'C7500', 2000, 'WHITE', 'YES');

INSERT INTO TSM_VEHICLE(VEHICLE_ID, VEHICLE_TYPE, VEHICLE_MAKE, VEHICLE_MODEL, VEHICLE_YEAR, COLOR, OPERATIONAL_YN)
VALUES(TSM_VEHICLE_VEHICLEID_SEQ.NEXTVAL,'TRUCK','GMC', 'C7500', 1998, 'RED', 'YES');

INSERT INTO TSM_VEHICLE(VEHICLE_ID, VEHICLE_TYPE, VEHICLE_MAKE, VEHICLE_MODEL, VEHICLE_YEAR, COLOR, OPERATIONAL_YN)
VALUES(TSM_VEHICLE_VEHICLEID_SEQ.NEXTVAL,'TRUCK','GMC', 'C7500', 2005, 'WHITE', 'YES');

INSERT INTO TSM_VEHICLE(VEHICLE_ID, VEHICLE_TYPE, VEHICLE_MAKE, VEHICLE_MODEL, VEHICLE_YEAR, COLOR, OPERATIONAL_YN)
VALUES(TSM_VEHICLE_VEHICLEID_SEQ.NEXTVAL,'CAR', 'DODGE', 'CARAVAN', 2005, 'WHITE', 'YES');

INSERT INTO TSM_VEHICLE(VEHICLE_ID, VEHICLE_TYPE, VEHICLE_MAKE, VEHICLE_MODEL, VEHICLE_YEAR, COLOR, OPERATIONAL_YN)
VALUES(TSM_VEHICLE_VEHICLEID_SEQ.NEXTVAL,'CAR', 'TOYOTA', 'MATRIX', 2012, 'GREY', 'YES');

INSERT INTO TSM_VEHICLE(VEHICLE_ID, VEHICLE_TYPE, VEHICLE_MAKE, VEHICLE_MODEL, VEHICLE_YEAR, COLOR, OPERATIONAL_YN)
VALUES(TSM_VEHICLE_VEHICLEID_SEQ.NEXTVAL,'TRUCK','FORD', 'F650', 2010, 'WHITE', 'NO');


--TSM_TRUCK
INSERT INTO TSM_TRUCK(VEHICLE_ID, VEHICLE_TYPE, TRUCK_LENGTH_FT, TRUCK_HEIGHT_FT)
VALUES(1, 'TRUCK', 26, 12);

INSERT INTO TSM_TRUCK(VEHICLE_ID, VEHICLE_TYPE, TRUCK_LENGTH_FT, TRUCK_HEIGHT_FT)
VALUES(2, 'TRUCK', 26, 12);

INSERT INTO TSM_TRUCK(VEHICLE_ID, VEHICLE_TYPE, TRUCK_LENGTH_FT, TRUCK_HEIGHT_FT)
VALUES(3, 'TRUCK', 26, 12);

INSERT INTO TSM_TRUCK(VEHICLE_ID, VEHICLE_TYPE, TRUCK_LENGTH_FT, TRUCK_HEIGHT_FT)
VALUES(6, 'TRUCK', 24, 12);



--TSM_CAR
INSERT INTO TSM_CAR(VEHICLE_ID, VEHICLE_TYPE, CAR_PURPOSE)
VALUES(4, 'CAR', 'PACKING');

INSERT INTO TSM_CAR(VEHICLE_ID, VEHICLE_TYPE, CAR_PURPOSE)
VALUES(5, 'CAR', 'CUSTOMER RELATIONS');











--EMPLOYEE

INSERT INTO TSM_EMPLOYEE(EMPLOYEE_ID, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, STREET, CITY, STATE, ZIP_CODE, DOB, CELL_PHONE, EMAIL, GENDER, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_EMPLOYEE_EMPLOYEEID_SEQ.NEXTVAL, 'TAYLOR', 'A', 'STEVENS', '1333 MILFORD ST', 'MT. CLEMENS', 'MI', 48033, '01-AUG-1996', '(212)212-1221', 'TSTEVENS@FAKEMAIL.COM', 'MALE', 'YES', 'YES');

INSERT INTO TSM_EMPLOYEE(EMPLOYEE_ID, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, STREET, CITY, STATE, ZIP_CODE, DOB, CELL_PHONE, EMAIL, GENDER, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_EMPLOYEE_EMPLOYEEID_SEQ.NEXTVAL, 'NICK', 'W', 'FASSEEL', '22455 SCHRAM ST', 'ROSEVILLE', 'MI', 48066, '27-JUN-1996', '(221)112-1212', 'NFASSEEL@FAKEMAIL.COM', 'MALE', 'YES', 'NO');

INSERT INTO TSM_EMPLOYEE(EMPLOYEE_ID, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, STREET, CITY, STATE, ZIP_CODE, DOB, CELL_PHONE, EMAIL, GENDER, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_EMPLOYEE_EMPLOYEEID_SEQ.NEXTVAL, 'LARRY', 'F', 'ROBERTS', '55555 ROCK ST', 'ROSEVILLE', 'MI', 48066, '24-JAN-1996', '(995)995-9595', 'LROBERTS@FAKEMAIL.COM', 'MALE', 'YES', 'NO');

INSERT INTO TSM_EMPLOYEE(EMPLOYEE_ID, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, STREET, CITY, STATE, ZIP_CODE, DOB, CELL_PHONE, EMAIL, GENDER, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_EMPLOYEE_EMPLOYEEID_SEQ.NEXTVAL, 'JONOTHATAN', 'Q', 'WILLIAMS', '22222 WEST DR', 'MACOMB', 'MI', 48042, '22-MAR-1990', '(787)787-7878', 'JWILL@FAKEMAIL.COM', 'MALE', 'YES', 'YES');

INSERT INTO TSM_EMPLOYEE(EMPLOYEE_ID, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, STREET, CITY, STATE, ZIP_CODE, DOB, CELL_PHONE, EMAIL, GENDER, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_EMPLOYEE_EMPLOYEEID_SEQ.NEXTVAL, 'LINDA', 'F', 'POPE', '12235 EAST ST', 'MACOMB', 'MI', 48042, '04-APR-1985', '(444)333-3334', 'LPOPE@FAKEMAIL.COM', 'FEMALE', 'YES', 'YES');

INSERT INTO TSM_EMPLOYEE(EMPLOYEE_ID, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, STREET, CITY, STATE, ZIP_CODE, DOB, CELL_PHONE, EMAIL, GENDER, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_EMPLOYEE_EMPLOYEEID_SEQ.NEXTVAL, 'JUDY', 'K', 'JONES', '76667 NORTH ST', 'TROY', 'MI', 48077, '22-OCT-1992', '(455)555-5554', 'JJONES@FAKEMAIL.COM', 'FEMALE', 'NO', 'YES');

INSERT INTO TSM_EMPLOYEE(EMPLOYEE_ID, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, STREET, CITY, STATE, ZIP_CODE, DOB, CELL_PHONE, EMAIL, GENDER, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_EMPLOYEE_EMPLOYEEID_SEQ.NEXTVAL, 'WILL', 'J', 'MARTIN', '33333 SOUTH RD', 'TROY', 'MI', 48077, '13-MAY-1991', '(123)321-4545', 'WMARTIN@FAKEMAIL.COM', 'MALE', 'YES', 'NO');

INSERT INTO TSM_EMPLOYEE(EMPLOYEE_ID, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, STREET, CITY, STATE, ZIP_CODE, DOB, CELL_PHONE, EMAIL, GENDER, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_EMPLOYEE_EMPLOYEEID_SEQ.NEXTVAL, 'LUIGI', 'A', 'MARIO', '22668 JEFFERSON ST', 'ST. CLAIR SHORES', 'MI', 48080, '12-SEP-1982', '(952)345-6776', 'LMARIO@FAKEMAIL.COM', 'MALE', 'NO', 'YES');

INSERT INTO TSM_EMPLOYEE(EMPLOYEE_ID, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, STREET, CITY, STATE, ZIP_CODE, DOB, CELL_PHONE, EMAIL, GENDER, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_EMPLOYEE_EMPLOYEEID_SEQ.NEXTVAL, 'PAUL', 'B', 'JOHNSON', '66554 BREEZE AVE', 'UTICA', 'MI', 48315, '07-JUL-1975', '(333)666-7777', 'PJOHNSON@FAKEMAIL.COM', 'MALE', 'NO', 'YES');

INSERT INTO TSM_EMPLOYEE(EMPLOYEE_ID, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, STREET, CITY, STATE, ZIP_CODE, DOB, CELL_PHONE, EMAIL, GENDER, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_EMPLOYEE_EMPLOYEEID_SEQ.NEXTVAL, 'JORDAN', 'R', 'SUTHERS', '337 ELMWOOD ST', 'TROY', 'MI', 48077, '11-NOV-1999', '(369)963-3636', 'JSUTHERS@FAKEMAIL.COM', 'MALE', 'YES', 'NO');





--MOVER

INSERT INTO TSM_MOVER(EMPLOYEE_ID, DRIVER_YN, PACKING_SKILLS_YN, HOURLY_WAGE, MOVER_YN, OFFICE_WORKER_YN)
VALUES(1, 'YES', 'YES', NULL, 'YES', 'YES');

INSERT INTO TSM_MOVER(EMPLOYEE_ID, DRIVER_YN, PACKING_SKILLS_YN, HOURLY_WAGE, MOVER_YN, OFFICE_WORKER_YN)
VALUES(2, 'YES', 'YES', 15, 'YES', 'NO');

INSERT INTO TSM_MOVER(EMPLOYEE_ID, DRIVER_YN, PACKING_SKILLS_YN, HOURLY_WAGE, MOVER_YN, OFFICE_WORKER_YN)
VALUES(3, 'NO', 'YES', 14, 'YES', 'NO');

INSERT INTO TSM_MOVER(EMPLOYEE_ID, DRIVER_YN, PACKING_SKILLS_YN, HOURLY_WAGE, MOVER_YN, OFFICE_WORKER_YN)
VALUES(4, 'NO', 'YES', NULL, 'YES', 'YES');

INSERT INTO TSM_MOVER(EMPLOYEE_ID, DRIVER_YN, PACKING_SKILLS_YN, HOURLY_WAGE, MOVER_YN, OFFICE_WORKER_YN)
VALUES(5, 'NO', 'YES', NULL, 'YES', 'YES');

INSERT INTO TSM_MOVER(EMPLOYEE_ID, DRIVER_YN, PACKING_SKILLS_YN, HOURLY_WAGE, MOVER_YN, OFFICE_WORKER_YN)
VALUES(7, 'YES', 'NO', 13.50, 'YES', 'NO');

INSERT INTO TSM_MOVER(EMPLOYEE_ID, DRIVER_YN, PACKING_SKILLS_YN, HOURLY_WAGE, MOVER_YN, OFFICE_WORKER_YN)
VALUES(10, 'YES', 'YES', 12.50, 'YES', 'NO');




--OFFICE WORKER
INSERT INTO TSM_OFFICE_WORKER(EMPLOYEE_ID, OFFICE_POSITION, YEARLY_SALARY, MOVER_YN, OFFICE_WORKER_YN)
VALUES(1, 'MAINTENENCE', 50000, 'YES', 'YES');

INSERT INTO TSM_OFFICE_WORKER(EMPLOYEE_ID, OFFICE_POSITION, YEARLY_SALARY, MOVER_YN, OFFICE_WORKER_YN)
VALUES(4, 'RELATIONS DIRECTOR', 60000, 'YES', 'YES');

INSERT INTO TSM_OFFICE_WORKER(EMPLOYEE_ID, OFFICE_POSITION, YEARLY_SALARY, MOVER_YN, OFFICE_WORKER_YN)
VALUES(5, 'MAINTENENCE', 40000, 'YES', 'YES');

INSERT INTO TSM_OFFICE_WORKER(EMPLOYEE_ID, OFFICE_POSITION, YEARLY_SALARY, MOVER_YN, OFFICE_WORKER_YN)
VALUES(6, 'RECEPTIONIST', 45000, 'NO', 'YES');

INSERT INTO TSM_OFFICE_WORKER(EMPLOYEE_ID, OFFICE_POSITION, YEARLY_SALARY, MOVER_YN, OFFICE_WORKER_YN)
VALUES(8, 'MOVING DIRECTOR', 70000, 'NO', 'YES');

INSERT INTO TSM_OFFICE_WORKER(EMPLOYEE_ID, OFFICE_POSITION, YEARLY_SALARY, MOVER_YN, OFFICE_WORKER_YN)
VALUES(9, 'OWNER', 100000, 'NO', 'YES');



--HOURLY_PAYROLL
INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 1, '01-JAN-2020', '07-JAN-2020', '14-JAN-2020', 40, 'YES', 'YES');


INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 2, '01-JAN-2020', '07-JAN-2020', '14-JAN-2020', 35, 'YES', 'NO');


INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 3, '01-JAN-2020', '07-JAN-2020', '14-JAN-2020', 32, 'YES', 'NO');


INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 4, '01-JAN-2020', '07-JAN-2020', '14-JAN-2020', 28, 'YES', 'YES');


INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 5, '01-JAN-2020', '07-JAN-2020', '14-JAN-2020', 40, 'YES', 'YES');


INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 7, '01-JAN-2020', '07-JAN-2020', '14-JAN-2020', 38, 'YES', 'NO');



INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 1, '07-JAN-2020', '14-JAN-2020', '21-JAN-2020', 40, 'YES', 'YES');


INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 2, '07-JAN-2020', '14-JAN-2020', '21-JAN-2020', 35, 'YES', 'NO');


INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 3, '07-JAN-2020', '14-JAN-2020', '21-JAN-2020', 32, 'YES', 'NO');


INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 4, '07-JAN-2020', '14-JAN-2020', '21-JAN-2020', 28, 'YES', 'YES');


INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 5, '07-JAN-2020', '14-JAN-2020', '21-JAN-2020', 40, 'YES', 'YES');


INSERT INTO TSM_HOURLY_PAYROLL(PAYROLL_ID, EMPLOYEE_ID, WORK_WEEK_START, WORK_WEEK_END, PAY_DATE, HOURS_WORKED, MOVER_YN, OFFICE_WORKER_YN)
VALUES(TSM_HOURLYPAY_PAYROLLID_SEQ.NEXTVAL, 7, '07-JAN-2020', '14-JAN-2020', '21-JAN-2020', 38, 'YES', 'NO');





--CUSTOMER
INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'CLIFFORD', 'I', 'STEVENS', '13-AUG-1939', NULL, '(111)111-1111', NULL, 'MALE', 'YES', NULL);

INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'CAROL', 'J', 'STEVENS', '20-OCT-1940', NULL, '(111)111-1111', NULL, 'FEMALE', 'NO', NULL);



INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'ALLEN', 'A', 'HOLT', '13-JAN-1920', NULL, '(111)111-1212', NULL, 'MALE', 'NO', 'HAS DIMENTIA');

INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'GUARDIAN', 'ADAM', 'P', 'HOLT', '12-FEB-1950', '(222)222-2222', '(222)232-3232', 'AHOLT@FAKEMAIL.COM', 'MALE', 'YES', NULL);



INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'ABRAHAM', 'F', 'COLLIER', '22-SEP-1945', '(333)333-3333', '(333)333-3434', 'ACOLLIER@FAKEMAIL.COM', 'MALE', 'YES', NULL);



INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'JOE', 'Q', 'BLOW', '05-NOV-1931', NULL, '(444)444-4444', NULL, 'MALE', 'NO', 'IS IN HOSPITAL RIGHT NOW AND WONT BE THERE ON MOVE DAY');

INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'JOAN', 'P', 'BLOW', '27-DEC-1938', NULL, '(444)444-4444', NULL, 'FEMALE', 'NO', NULL);

INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'GUARDIAN', 'JOHN', 'C', 'BLOW', '19-MAY-1961', '(444)555-5454', '(444)444-4545', 'AJBLOW@FAKEMAIL.COM', 'MALE', 'YES', NULL);




INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'MARION', 'H', 'FARMER', '08-APR-1926', NULL, '(555)555-5555', NULL, 'FEMALE', 'NO', NULL);

INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'GUARDIAN', 'SALLY', 'T', 'FARMER', '10-JUL-1958', '(556)565-5566', '(556)566-6655', 'SFARMER@FAKEMAIL.COM', 'FEMALE', 'YES', NULL);




INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'HEATHER', 'E', 'JEFFERSON', '06-JUN-1951', '(655)656-5555', '(655)655-6666', 'HJEFFERSON@FAKEMAIL.COM', 'FEMALE', 'YES', NULL);



INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'JERRY', 'D', 'PETERS', '30-JAN-1949', NULL, '(777)777-7777', NULL, 'MALE', 'NO', NULL);

INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'MARY', 'E', 'PETERS', '02-NOV-1952', '(777)777-7777', '(222)232-3232', NULL, 'FEMALE', 'YES', NULL);



INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'SHELDON', 'R', 'FLOYD', '24-FEB-1932', '(888)888-9999', '(888)999-8888', NULL, 'MALE', 'YES', NULL);

INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'SHELLY', 'B', 'FLOYD', '06-JUN-1932', '(888)898-8989', '(888)989-9898', NULL, 'FEMALE', 'NO', NULL);



INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'VERNON', 'X', 'SULLIVAN', '05-DEC-1935', NULL, '(999)999-9999', NULL, 'MALE', 'NO', 'NEEDS EXTRA SPACE FOR WALKER');

INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'ANNIE', 'U', 'SULLIVAN', '03-OCT-1950', NULL, '(999)999-9999', NULL, 'FEMALE', 'NO', 'HAS DIMENTIA');

INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'GUARDIAN', 'MARTIN', 'L', 'BARKLEY', '09-SEP-1977', '(999)888-9999', '(999)999-8888', 'MBARKLEY@FAKEMAIL.COM', 'MALE', 'YES', NULL);



INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'HAROLD', 'J', 'STOCKTON', '23-MAY-1931', NULL, '(212)222-2211', NULL, 'MALE', 'YES', NULL);

INSERT INTO TSM_CUSTOMER(CUSTOMER_ID, CUSTOMER_TYPE, FIRST_NAME, MIDDLE_INITAL, LAST_NAME, DOB, CELL_PHONE, HOME_PHONE, EMAIL, GENDER, RESPONSABLE_FOR_PAYMENT_YN, COMMENTS)
VALUES(TSM_CUSTOMER_CUSTOMERID_SEQ.NEXTVAL, 'RESIDENT', 'JILL', 'H', 'STOCKTON', '28-AUG-1933', NULL, '(212)222-2211', NULL, 'FEMALE', 'NO', NULL);






--RESIDENT

INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(1, 'RESIDENT', 'YES', '28099 ELMWOOD', 'TROY', 'MI', 48083, 101);

INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(2, 'RESIDENT', 'YES', '28099 ELMWOOD', 'TROY', 'MI', 48083, 101);


INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(3, 'RESIDENT', 'NO', 'BURBON', 'BIRMINGHAM', 'MI', 48099, NULL);


INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(5, 'RESIDENT', 'YES', '19882 ROCK ST', 'ROSEVILLE', 'MI', 48066, NULL);


INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(6, 'RESIDENT', 'YES', '13555 MARYLAND', 'UTICA', 'MI', 48315, NULL);

INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(7, 'RESIDENT', 'YES', '13555 MARYLAND', 'UTICA', 'MI', 48315, NULL);


INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(9, 'RESIDENT', 'YES', '2222 BLISS DR', 'SHELBY', 'MI', 49455, 215);


INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(11, 'RESIDENT', 'YES', '83211 DEQUINDRE RD', 'ROCHESTER', 'MI', 48307, NULL);


INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(12, 'RESIDENT', 'YES', '64374 ROCK ST', 'CHESTERFIELD', 'MI', 23832, NULL);

INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(13, 'RESIDENT', 'YES', '64374 ROCK ST', 'CHESTERFIELD', 'MI', 23832, NULL);


INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(14, 'RESIDENT', 'YES', '22522 OUTER DR', 'DEARBORN', 'MI', 48120, NULL);

INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(15, 'RESIDENT', 'NO', '22522 OUTER DR', 'DEARBORN', 'MI', 48120, NULL);


INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(16, 'RESIDENT', 'NO', '54555 MARTIN RD', 'HILLSDALE', 'MI', 49242, NULL);

INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(17, 'RESIDENT', 'NO', '54555 MARTIN RD', 'HILLSDALE', 'MI', 49242, NULL);


INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(19, 'RESIDENT', 'YES', '19444 NORMANDY DR', 'EASTPOINTE', 'MI', 48021, NULL);

INSERT INTO TSM_RESIDENT(CUSTOMER_ID, CUSTOMER_TYPE, ABLE_TO_CONSENT_YN, STREET, CITY, STATE, ZIP_CODE, ROOM_NUMBER)
VALUES(20, 'RESIDENT', 'NO', '19444 NORMANDY DR', 'EASTPOINTE', 'MI', 48021, NULL);





--GUARDIAN
INSERT INTO TSM_GUARDIAN(CUSTOMER_ID, CUSTOMER_TYPE, RELATION_TO_RESIDENT)
VALUES(4, 'GUARDIAN', 'SON');

INSERT INTO TSM_GUARDIAN(CUSTOMER_ID, CUSTOMER_TYPE, RELATION_TO_RESIDENT)
VALUES(8, 'GUARDIAN', 'SON');

INSERT INTO TSM_GUARDIAN(CUSTOMER_ID, CUSTOMER_TYPE, RELATION_TO_RESIDENT)
VALUES(10, 'GUARDIAN', 'DAUGHTER');

INSERT INTO TSM_GUARDIAN(CUSTOMER_ID, CUSTOMER_TYPE, RELATION_TO_RESIDENT)
VALUES(18, 'GUARDIAN', 'FRIEND');





--EXECUTIVE DIRECTOR
INSERT INTO TSM_EXECUTIVE_DIRECTOR(EXECUTIVE_ID, FIRST_NAME, LAST_NAME, PHONE_NUMBER, EMAIL)
VALUES(TSM_EXECUTIVE_EXECUTIVEID_SEQ.NEXTVAL, 'JANET', 'JONES', '(248)436-4621', 'JJONES@FAKEMAIL.COM');

INSERT INTO TSM_EXECUTIVE_DIRECTOR(EXECUTIVE_ID, FIRST_NAME, LAST_NAME, PHONE_NUMBER, EMAIL)
VALUES(TSM_EXECUTIVE_EXECUTIVEID_SEQ.NEXTVAL, 'KAREN', 'SMITH', '(586)722-2600', 'KSMITH@FAKEMAIL.COM');

INSERT INTO TSM_EXECUTIVE_DIRECTOR(EXECUTIVE_ID, FIRST_NAME, LAST_NAME, PHONE_NUMBER, EMAIL)
VALUES(TSM_EXECUTIVE_EXECUTIVEID_SEQ.NEXTVAL, 'ERIC', 'SNOW', '(586)739-9545', 'ESNOW@FAKEMAIL.COM');

INSERT INTO TSM_EXECUTIVE_DIRECTOR(EXECUTIVE_ID, FIRST_NAME, LAST_NAME, PHONE_NUMBER, EMAIL)
VALUES(TSM_EXECUTIVE_EXECUTIVEID_SEQ.NEXTVAL, 'MARVIN', 'JONES', '(586)232-5848', 'MJONES@FAKEMAIL.COM');

INSERT INTO TSM_EXECUTIVE_DIRECTOR(EXECUTIVE_ID, FIRST_NAME, LAST_NAME, PHONE_NUMBER, EMAIL)
VALUES(TSM_EXECUTIVE_EXECUTIVEID_SEQ.NEXTVAL, 'BARBARA', 'ROSE', '(586)298-3137', 'BROSE@FAKEMAIL.COM');





--SENIOR COMMUNITY
INSERT INTO TSM_SENIOR_COMMUNITY(COMMUNITY_ID, EXECUTIVE_ID, COMMUNITY_NAME, STREET, CITY, STATE, ZIP_CODE, NUM_OF_FLOORS, ASSISTED_OR_MEMORY_YN)
VALUES(TSM_COMMUNITY_COMMUNITYID_SEQ.NEXTVAL, 1, 'AMERICAN HOUSE TROY', '2300 GRAND HAVEN DR', 'TROY', 'MI', '48077', 3, 'YES');

INSERT INTO TSM_SENIOR_COMMUNITY(COMMUNITY_ID, EXECUTIVE_ID, COMMUNITY_NAME, STREET, CITY, STATE, ZIP_CODE, NUM_OF_FLOORS, ASSISTED_OR_MEMORY_YN)
VALUES(TSM_COMMUNITY_COMMUNITYID_SEQ.NEXTVAL, 2, 'WINDEMERE PARK SENIOR COMMUNITY', '31800 VAN DYKE AVE', 'WARREN', 'MI', '48093', 2, 'YES');

INSERT INTO TSM_SENIOR_COMMUNITY(COMMUNITY_ID, EXECUTIVE_ID, COMMUNITY_NAME, STREET, CITY, STATE, ZIP_CODE, NUM_OF_FLOORS, ASSISTED_OR_MEMORY_YN)
VALUES(TSM_COMMUNITY_COMMUNITYID_SEQ.NEXTVAL, 3, 'NORTH POINT VILLAGE', '45201 NORTHPOINTE BLVD', 'UTICA', 'MI', '45201', 1, 'YES');

INSERT INTO TSM_SENIOR_COMMUNITY(COMMUNITY_ID, EXECUTIVE_ID, COMMUNITY_NAME, STREET, CITY, STATE, ZIP_CODE, NUM_OF_FLOORS, ASSISTED_OR_MEMORY_YN)
VALUES(TSM_COMMUNITY_COMMUNITYID_SEQ.NEXTVAL, 4, 'WALTONWOOD LAKESIDE', '14750 LAKESIDE CIRCLE', 'STERLING HEIGHTS', 'MI', '48313', 4, 'YES');

INSERT INTO TSM_SENIOR_COMMUNITY(COMMUNITY_ID, EXECUTIVE_ID, COMMUNITY_NAME, STREET, CITY, STATE, ZIP_CODE, NUM_OF_FLOORS, ASSISTED_OR_MEMORY_YN)
VALUES(TSM_COMMUNITY_COMMUNITYID_SEQ.NEXTVAL, 5, 'AMERICAN HOUSE STERLING MEADOWS', '33433 SCHOENHERR RD', 'STERLING HEIGHTS', 'MI', '48313', 3, 'YES');





--JOB ORDER
INSERT INTO TSM_JOB_ORDER(JOB_ID, COMMUNITY_ID, START_DATE, FINISH_DATE, SALVATION_ARMY_DROPOFF_YN, EXPECTED_MILES_TO_DRIVE, ORDER_STATUS, JOB_COST, BILL_AMT_PAID, COMMENTS)
VALUES(TSM_JOBORDER_JOBID_SEQ.NEXTVAL, 1, '01-JAN-2020', '01-JAN-2020', 'NO', 5, 'COMPLETED', 500, 500, NULL);

INSERT INTO TSM_JOB_ORDER(JOB_ID, COMMUNITY_ID, START_DATE, FINISH_DATE, SALVATION_ARMY_DROPOFF_YN, EXPECTED_MILES_TO_DRIVE, ORDER_STATUS, JOB_COST, BILL_AMT_PAID, COMMENTS)
VALUES(TSM_JOBORDER_JOBID_SEQ.NEXTVAL, 1, '02-JAN-2020', '03-JAN-2020', 'NO', 5, 'COMPLETED', 750, 750, NULL);

INSERT INTO TSM_JOB_ORDER(JOB_ID, COMMUNITY_ID, START_DATE, FINISH_DATE, SALVATION_ARMY_DROPOFF_YN, EXPECTED_MILES_TO_DRIVE, ORDER_STATUS, JOB_COST, BILL_AMT_PAID, COMMENTS)
VALUES(TSM_JOBORDER_JOBID_SEQ.NEXTVAL, 2, '04-JAN-2020', '04-JAN-2020', 'YES', 10, 'COMPLETED', 2500, 2000, 'BILL NOT COMPLETELY PAID');

INSERT INTO TSM_JOB_ORDER(JOB_ID, COMMUNITY_ID, START_DATE, FINISH_DATE, SALVATION_ARMY_DROPOFF_YN, EXPECTED_MILES_TO_DRIVE, ORDER_STATUS, JOB_COST, BILL_AMT_PAID, COMMENTS)
VALUES(TSM_JOBORDER_JOBID_SEQ.NEXTVAL, 3, '05-JAN-2020', '05-JAN-2020', 'NO', 10, 'COMPLETED', 3500, 3500, NULL);

INSERT INTO TSM_JOB_ORDER(JOB_ID, COMMUNITY_ID, START_DATE, FINISH_DATE, SALVATION_ARMY_DROPOFF_YN, EXPECTED_MILES_TO_DRIVE, ORDER_STATUS, JOB_COST, BILL_AMT_PAID, COMMENTS)
VALUES(TSM_JOBORDER_JOBID_SEQ.NEXTVAL, 2, '06-JAN-2020', '06-JAN-2020', 'YES', 100, 'COMPLETED', 1750, 1500, 'BILL NOT COMPLETELY PAID');


INSERT INTO TSM_JOB_ORDER(JOB_ID, COMMUNITY_ID, START_DATE, FINISH_DATE, SALVATION_ARMY_DROPOFF_YN, EXPECTED_MILES_TO_DRIVE, ORDER_STATUS, JOB_COST, BILL_AMT_PAID, COMMENTS)
VALUES(TSM_JOBORDER_JOBID_SEQ.NEXTVAL, 4, '08-JAN-2020', '08-JAN-2020', 'NO', 50, 'COMPLETED', 1000, 1000, NULL);

INSERT INTO TSM_JOB_ORDER(JOB_ID, COMMUNITY_ID, START_DATE, FINISH_DATE, SALVATION_ARMY_DROPOFF_YN, EXPECTED_MILES_TO_DRIVE, ORDER_STATUS, JOB_COST, BILL_AMT_PAID, COMMENTS)
VALUES(TSM_JOBORDER_JOBID_SEQ.NEXTVAL, 3, '08-JAN-2020', '08-JAN-2020', 'NO', 25, 'CANCELLED', 2000, 0, NULL);

INSERT INTO TSM_JOB_ORDER(JOB_ID, COMMUNITY_ID, START_DATE, FINISH_DATE, SALVATION_ARMY_DROPOFF_YN, EXPECTED_MILES_TO_DRIVE, ORDER_STATUS, JOB_COST, BILL_AMT_PAID, COMMENTS)
VALUES(TSM_JOBORDER_JOBID_SEQ.NEXTVAL, 1, '09-JAN-2020', '09-JAN-2020', 'YES', 7, 'STARTED', 1400, 0, NULL);

INSERT INTO TSM_JOB_ORDER(JOB_ID, COMMUNITY_ID, START_DATE, FINISH_DATE, SALVATION_ARMY_DROPOFF_YN, EXPECTED_MILES_TO_DRIVE, ORDER_STATUS, JOB_COST, BILL_AMT_PAID, COMMENTS)
VALUES(TSM_JOBORDER_JOBID_SEQ.NEXTVAL, 4, '10-JAN-2020', '12-JAN-2020', 'NO', 85, 'NOT STARTED', 8000, 0, NULL);

INSERT INTO TSM_JOB_ORDER(JOB_ID, COMMUNITY_ID, START_DATE, FINISH_DATE, SALVATION_ARMY_DROPOFF_YN, EXPECTED_MILES_TO_DRIVE, ORDER_STATUS, JOB_COST, BILL_AMT_PAID, COMMENTS)
VALUES(TSM_JOBORDER_JOBID_SEQ.NEXTVAL, 2, '13-JAN-2020', '13-JAN-2020', 'NO', 25, 'NOT STARTED', 4500, 0, NULL);









--JUNCTION TABLES--------------------------------------------------------------------------------------------------------------------------------------------------


--TSM_EQUIPMENT_VEHICLE
INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(1,1,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(2,1,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(3,1,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(4,1,'TRUCK',2);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(5,1,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(6,1,'TRUCK',20);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(7,1,'TRUCK',50);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(8,1,'TRUCK',2);



INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(1,2,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(2,2,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(3,2,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(4,2,'TRUCK',2);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(5,2,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(6,2,'TRUCK',20);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(7,2,'TRUCK',50);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(8,2,'TRUCK',2);




INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(1,3,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(2,3,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(3,3,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(4,3,'TRUCK',2);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(5,3,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(6,3,'TRUCK',20);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(7,3,'TRUCK',50);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(8,3,'TRUCK',2);




INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(9,4,'CAR',20);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(10,4,'CAR',200);



INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(9,5,'CAR',20);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(10,5,'CAR',200);



INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(1,6,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(2,6,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(3,6,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(4,6,'TRUCK',2);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(5,6,'TRUCK',1);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(6,6,'TRUCK',20);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(7,6,'TRUCK',50);

INSERT INTO TSM_EQUIPMENT_VEHICLE(EQUIPMENT_ID, VEHICLE_ID, VEHICLE_TYPE, EQUIPMENT_QUANTITY)
VALUES(8,6,'TRUCK',2);







--RESIDENT GUARDIAN
INSERT INTO TSM_RESIDENT_GUARDIAN(RESIDENT_ID, CUSTOMER_TYPE_R, GUARDIAN_ID, CUSTOMER_TYPE_G)
VALUES(3, 'RESIDENT', 4, 'GUARDIAN');



INSERT INTO TSM_RESIDENT_GUARDIAN(RESIDENT_ID, CUSTOMER_TYPE_R, GUARDIAN_ID, CUSTOMER_TYPE_G)
VALUES(6, 'RESIDENT', 8, 'GUARDIAN');

INSERT INTO TSM_RESIDENT_GUARDIAN(RESIDENT_ID, CUSTOMER_TYPE_R, GUARDIAN_ID, CUSTOMER_TYPE_G)
VALUES(7, 'RESIDENT', 8, 'GUARDIAN');



INSERT INTO TSM_RESIDENT_GUARDIAN(RESIDENT_ID, CUSTOMER_TYPE_R, GUARDIAN_ID, CUSTOMER_TYPE_G)
VALUES(9, 'RESIDENT', 10, 'GUARDIAN');



INSERT INTO TSM_RESIDENT_GUARDIAN(RESIDENT_ID, CUSTOMER_TYPE_R, GUARDIAN_ID, CUSTOMER_TYPE_G)
VALUES(16, 'RESIDENT', 18, 'GUARDIAN');

INSERT INTO TSM_RESIDENT_GUARDIAN(RESIDENT_ID, CUSTOMER_TYPE_R, GUARDIAN_ID, CUSTOMER_TYPE_G)
VALUES(17, 'RESIDENT', 18, 'GUARDIAN');







--VEHICLE JOB ORDER
INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(1, 'TRUCK', 1, 5);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(1, 'TRUCK', 2, 5);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(1, 'TRUCK', 4, 25);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(1, 'TRUCK', 7, 0);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(1, 'TRUCK', 9, 0);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(1, 'TRUCK', 10, 0);



INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(2, 'TRUCK', 3, 12);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(2, 'TRUCK', 5, 115);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(2, 'TRUCK', 8, 0);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(2, 'TRUCK', 9, 0);




INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(3, 'TRUCK', 3, 15);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(3, 'TRUCK', 6, 55);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(3, 'TRUCK', 10, 0);




INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(4, 'CAR', 3, 14);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(4, 'CAR', 5, 120);

INSERT INTO TSM_VEHICLE_JOB_ORDER(VEHICLE_ID, VEHICLE_TYPE, JOB_ID, MILES_DRIVEN)
VALUES(4, 'CAR', 9, 0);









--EMPLOYEE JOB ORDER
INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(1, 'YES', 'YES', 1);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(1, 'YES', 'YES', 3);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(1, 'YES', 'YES', 4);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(1, 'YES', 'YES', 7);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(1, 'YES', 'YES', 9);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(1, 'YES', 'YES', 10);




INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(2, 'YES', 'NO', 2);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(2, 'YES', 'NO', 3);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(2, 'YES', 'NO', 4);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(2, 'YES', 'NO', 5);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(2, 'YES', 'NO', 6);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(2, 'YES', 'NO', 9);




INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(3, 'YES', 'NO', 1);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(3, 'YES', 'NO', 5);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(3, 'YES', 'NO', 6);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(3, 'YES', 'NO', 8);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(3, 'YES', 'NO', 9);



INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(4, 'YES', 'YES', 4);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(4, 'YES', 'YES', 9);





INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(5, 'YES', 'YES', 2);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(5, 'YES', 'YES', 3);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(5, 'YES', 'YES', 4);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(5, 'YES', 'YES', 5);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(5, 'YES', 'YES', 7);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(5, 'YES', 'YES', 9);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(5, 'YES', 'YES', 10);




INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(7, 'YES', 'NO', 8);

INSERT INTO TSM_EMPLOYEE_JOB_ORDER(EMPLOYEE_ID, MOVER_YN, OFFICE_WORKER_YN, JOB_ID)
VALUES(7, 'YES', 'NO', 10);









--CUSTOMER JOB ORDER
INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(1,'RESIDENT', 1);

INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(2,'RESIDENT', 1);



INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(3,'RESIDENT', 2);

INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(4,'GUARDIAN', 2);


INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(5,'RESIDENT', 3);


INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(6,'RESIDENT', 4);

INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(7,'RESIDENT', 4);

INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(8,'GUARDIAN', 4);



INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(9,'RESIDENT', 5);

INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(10,'GUARDIAN', 5);



INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(11,'RESIDENT', 6);



INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(12,'RESIDENT', 7);

INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(13,'RESIDENT', 7);



INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(14,'RESIDENT', 8);

INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(15,'RESIDENT', 8);



INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(16,'RESIDENT', 9);

INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(17,'RESIDENT', 9);

INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(18,'GUARDIAN', 9);



INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(19,'RESIDENT', 10);

INSERT INTO TSM_CUSTOMER_JOB_ORDER(CUSTOMER_ID, CUSTOMER_TYPE, JOB_ID)
VALUES(20,'RESIDENT', 10);



COMMIT;


